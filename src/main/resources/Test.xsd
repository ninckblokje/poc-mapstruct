<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022, ninckblokje
  ~ All rights reserved.
  ~
  ~ Redistribution and use in source and binary forms, with or without
  ~ modification, are permitted provided that the following conditions are met:
  ~
  ~ * Redistributions of source code must retain the above copyright notice, this
  ~   list of conditions and the following disclaimer.
  ~
  ~ * Redistributions in binary form must reproduce the above copyright notice,
  ~   this list of conditions and the following disclaimer in the documentation
  ~   and/or other materials provided with the distribution.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="ninckblokje/MapStruct/Test" xmlns:tns="ninckblokje/MapStruct/Test" elementFormDefault="qualified">
    
    <xs:complexType name="fieldItem">
        <xs:sequence>
            <xs:element name="field" type="xs:string" minOccurs="0" nillable="true"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ImportantFieldItem" type="tns:fieldItem"/>
    <xs:element name="UnimportantFieldItem" type="tns:fieldItem"/>

    <xs:complexType name="itemList">
        <xs:sequence>
            <xs:element name="Items">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:element ref="tns:ImportantFieldItem"/>
                        <xs:element ref="tns:UnimportantFieldItem"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ItemList" type="tns:itemList"/>
    
</xs:schema>